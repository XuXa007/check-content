plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.4-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier.set('')
}

repositories {
    mavenCentral()
}

ext {
    set('netflixDgsVersion', "9.1.2")
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    constraints {
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    }
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'com.h2database:h2'
}


dependencyManagement {
    imports {
        mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}